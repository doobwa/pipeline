#!/usr/bin/env Rscript

suppressPackageStartupMessages(library("optparse"))

option_list <- list(
make_option("--random", default=TRUE, help="Randomize placement of rows in the train file"),
make_option("--header", default=TRUE, help="Does data file have a header row")
)
parser <- OptionParser(usage = "%prog [options] train_file valid_file", option_list=option_list)
arguments <- parse_args(parser, positional_arguments = TRUE)

train_file <- arguments$args[1]
valid_file <- arguments$args[2]

dir.create(paste("splits/full",sep=""),showWarnings=FALSE)
dir.create(paste("splits/full/1",sep=""),showWarnings=FALSE)
dir.create(paste("splits/full/1/train",sep=""),showWarnings=FALSE)
dir.create(paste("splits/full/1/test",sep=""),showWarnings=FALSE)
dir.create(paste("predictions/full",sep=""),showWarnings=FALSE)
dir.create(paste("predictions/full/1",sep=""),showWarnings=FALSE)
dir.create(paste("predictions/full/1/train",sep=""),showWarnings=FALSE)
dir.create(paste("predictions/full/1/test",sep=""),showWarnings=FALSE)
dir.create(paste("logs/full",sep=""),showWarnings=FALSE)
dir.create(paste("logs/full/1",sep=""),showWarnings=FALSE)
dir.create(paste("logs/full/1/train",sep=""),showWarnings=FALSE)
dir.create(paste("logs/full/1/test",sep=""),showWarnings=FALSE)

# Write data and indices for training data
M <- as.numeric(read.table(pipe(paste('wc -l',train_file)))[1])
if (arguments$options$header) {
    train.ix <- 2:M
    M <- M - 1
} else {
    train.ix <- 1:M
}
if (arguments$options$random) {
    train.ix <- sample(train.ix, M, replace=FALSE)
}
if (arguments$options$header) {
    train.ix <- c(1, train.ix)
}
write(paste(train.ix - 1,collapse="\n"), file=paste("splits/full/1/train/ind",sep=""))

outfile <- paste("splits/full/1/train/data",sep="")
indices <- paste("splits/full/1/train/ind",sep="")
command <- paste("./pipeline/utils/filesplit.r --infile",train_file,"--outfile",outfile,"--indices",indices)
system(command)

# Write data and indices for validation data

M <- as.numeric(read.table(pipe(paste('wc -l',valid_file)))[1])
valid.ix <- 1:M
write(paste(valid.ix - 1,collapse="\n"), file=paste("splits/full/1/test/ind",sep=""))

outfile <- paste("splits/full/1/test/data",sep="")
indices <- paste("splits/full/1/test/ind",sep="")
command <- paste("./pipeline/utils/filesplit.r --infile",valid_file,"--outfile",outfile,"--indices",indices)
system(command)
