#!/usr/bin/env Rscript

# Creates a set of K-fold cross validation datasets for the supplied file,
# e.g. a training set.  The row indices (0-based) are saved to text files
# in splits/[k]fold/x for x = [0, ..., K].  The 0 split includes the entire 
# training set.

suppressPackageStartupMessages(library("optparse"))

option_list <- list(
  make_option("--K", default=5, help="Number of cross validation folds."),
  make_option("--random", default=TRUE, help="Randomize placementof rows into each fold"),
  make_option("--header", default=TRUE, help="Does data file have a header row")

)
parser <- OptionParser(usage = "%prog [options] datafile", option_list=option_list)
arguments <- parse_args(parser, positional_arguments = TRUE)

filename <- arguments$args
K <- arguments$options$K

M <- as.numeric(read.table(pipe(paste('wc -l',filename)))[1])
ix <- 1:M
if (arguments$options$random) {
  cvsplit <- sample(1:K,length(ix),replace=TRUE)
} else {
  cvsplit <- as.numeric(cut(ix,K))
}
if (arguments$options$header) {
  cvsplit[1] <- 0  # first row not assigned a split
}

dir.create(paste("splits/",K,"fold",sep=""),showWarnings=FALSE)
dir.create(paste("predictions/",K,"fold",sep=""),showWarnings=FALSE)
for (i in K:1) {
  cat(".")
  dir.create(paste("splits/",K,"fold/",i,sep=""),showWarnings=FALSE)
  dir.create(paste("splits/",K,"fold/",i,"/train",sep=""),showWarnings=FALSE)
  dir.create(paste("splits/",K,"fold/",i,"/test",sep=""),showWarnings=FALSE)
  dir.create(paste("predictions/",K,"fold/",i,sep=""),showWarnings=FALSE)
  dir.create(paste("predictions/",K,"fold/",i,"/train",sep=""),showWarnings=FALSE)
  dir.create(paste("predictions/",K,"fold/",i,"/test",sep=""),showWarnings=FALSE)
  train.ix <- which(cvsplit != i)
  test.ix  <- which(cvsplit == i)
  write(paste(train.ix - 1,collapse="\n"),
        file=paste("splits/",K,"fold/",i,"/train/ind",sep=""))
  write(paste(test.ix - 1,collapse="\n"),
        file=paste("splits/",K,"fold/",i,"/test/ind",sep=""),sep="\n")
}

for (i in K:1) {
  outfile <- paste("splits/",K,"fold/",i,"/train/data",sep="")
  indices <- paste("splits/",K,"fold/",i,"/train/ind",sep="")
  command <- paste("./pipeline/utils/filesplit.r --infile",filename,"--outfile",outfile,"--indices",indices)
  system(command)
}
for (i in K:1) {
  outfile <- paste("splits/",K,"fold/",i,"/test/data",sep="")
  indices <- paste("splits/",K,"fold/",i,"/test/ind",sep="")
  command <- paste("./pipeline/utils/filesplit.r --infile",filename,"--outfile",outfile,"--indices",indices)
  system(command)
}
